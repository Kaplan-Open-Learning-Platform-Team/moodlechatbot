{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport * as Templates from 'core/templates';\nimport { init as initChatInput } from './chat_input';\n\nconst Selectors = {\n    CHAT_CONTAINER: '.mod_moodlechatbot_chat',\n    MESSAGES_CONTAINER: '[data-region=\"messages\"]',\n};\n\n/**\n * Initialize the chat functionality.\n *\n * @param {string} uniqueId The unique identifier for this chat instance.\n */\nexport const init = (uniqueId) => {\n    const chatContainer = document.querySelector(Selectors.CHAT_CONTAINER + uniqueId);\n    const messagesContainer = chatContainer.querySelector(Selectors.MESSAGES_CONTAINER);\n\n    /**\n     * Display a new message in the chat.\n     *\n     * @param {Object} messageData The message data to display.\n     */\n    const displayMessage = async (messageData) => {\n        try {\n            const messageHtml = await Templates.render('mod_moodlechatbot/chat_message', messageData);\n            messagesContainer.insertAdjacentHTML('beforeend', messageHtml);\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n        } catch (error) {\n            Notification.exception(error);\n        }\n    };\n\n    /**\n     * Fetch and display chat history.\n     */\n    const loadChatHistory = () => {\n        const chatbotId = chatContainer.dataset.chatbotid;\n        \n        Ajax.call([{\n            methodname: 'mod_moodlechatbot_get_chat_history',\n            args: { chatbotid: chatbotId },\n            done: (messages) => {\n                messages.forEach(displayMessage);\n            },\n            fail: Notification.exception\n        }]);\n    };\n\n    // Initialize chat input\n    initChatInput(uniqueId);\n\n    // Load chat history\n    loadChatHistory();\n\n    // Listen for new messages\n    chatContainer.addEventListener('mod_moodlechatbot:messagesent', (event) => {\n        displayMessage(event.detail);\n    });\n};\n"],"names":["Selectors","uniqueId","chatContainer","document","querySelector","messagesContainer","displayMessage","async","messageHtml","Templates","render","messageData","insertAdjacentHTML","scrollTop","scrollHeight","error","exception","chatbotId","dataset","chatbotid","call","methodname","args","done","messages","forEach","fail","Notification","loadChatHistory","addEventListener","event","detail"],"mappings":"41CAKMA,yBACc,0BADdA,6BAEkB,yCAQHC,iBACXC,cAAgBC,SAASC,cAAcJ,yBAA2BC,UAClEI,kBAAoBH,cAAcE,cAAcJ,8BAOhDM,eAAiBC,MAAAA,wBAETC,kBAAoBC,UAAUC,OAAO,iCAAkCC,aAC7EN,kBAAkBO,mBAAmB,YAAaJ,aAClDH,kBAAkBQ,UAAYR,kBAAkBS,aAClD,MAAOC,6BACQC,UAAUD,8BAqBjBd,UAdU,YACdgB,UAAYf,cAAcgB,QAAQC,wBAEnCC,KAAK,CAAC,CACPC,WAAY,qCACZC,KAAM,CAAEH,UAAWF,WACnBM,KAAOC,WACHA,SAASC,QAAQnB,iBAErBoB,KAAMC,sBAAaX,cAQ3BY,GAGA1B,cAAc2B,iBAAiB,iCAAkCC,QAC7DxB,eAAewB,MAAMC"}