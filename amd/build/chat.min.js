define("mod_moodlechatbot/chat",["exports","core/ajax","core/str","./repository"],(function(_exports,_ajax,_str,Repository){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj},Repository=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Repository);const Selectors_actions={send:'[data-action="send"]'},Selectors_regions={messages:'[data-region="messages"]',input:'[data-region="input"]'};_exports.init=containerId=>{const container=document.getElementById(containerId),messagesRegion=container.querySelector(Selectors_regions.messages),inputRegion=container.querySelector(Selectors_regions.input),sendButton=container.querySelector(Selectors_actions.send),appendMessage=(sender,message)=>{const messageElement=document.createElement("p");messageElement.innerHTML="<strong>".concat(sender,":</strong> ").concat(message),messagesRegion.appendChild(messageElement),messagesRegion.scrollTop=messagesRegion.scrollHeight};sendButton.addEventListener("click",(()=>{const message=inputRegion.value.trim();message&&(appendMessage("You",message),inputRegion.value="",(async message=>{try{const response=await Repository.sendChatMessage(message);if("success"===response.status)appendMessage("Bot",response.message);else{const errorString=await(0,_str.get_string)("error","moodle");appendMessage("Bot",errorString)}}catch(error){const errorString=await(0,_str.get_string)("error","moodle");appendMessage("Bot",errorString)}})(message))})),inputRegion.addEventListener("keypress",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),sendButton.click())}))}}));

//# sourceMappingURL=chat.min.js.map